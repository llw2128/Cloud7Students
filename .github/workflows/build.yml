name: CI
      
# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  #when there is a push to the master
  push:
    branches: [ master ]
  #when there is a pull to the master
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    #does this mean that the files in my github repo are accessible by this YAML file?
    - uses: actions/checkout@v2
    
    #installs a version of python, but I need this if deploying to a severless Python Lambda?
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'



    #credentials to connect to AWS removed temp
    
    # Runs a set of commands using the runners shell; THIS DOESN'T WORK
    - name: Run a multi-line script
      run: |
         #install PIP
         python -m pip install --upgrade pip
         #install all dependencies as defined by requirements.txt in the current directory
         pip3 install -r requirements.txt -t .
         python -m pytest -v tests
         #for installing invidividual modules
         #pip3 install Flask -t .
         #zip files into current directory
         
  continuous-deployment:
    runs-on: ubuntu-latest
    needs: [continuous-integration]
    if: github.ref == 'refs/heads/main'
    steps:     # Step 1
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id:${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key:${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:us-east-2
     # Step 2
      - name: Create CodeDeploy Deployment
        id: deploy
        run: |
          aws deploy create-deployment \
            --application-name application-name \
            --deployment-group-name AppDeploymentGroupName \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }}